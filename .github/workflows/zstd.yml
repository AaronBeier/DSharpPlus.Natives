name: Build zstd
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/zstd.yml'
      - '.github/scripts/package-zstd.sh'

jobs:
  build:
    name: Build zstd
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Run the other two OSs even if one fails
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
          
    steps:
      - name: Clone zstd repo
        uses: actions/checkout@v4.2.2
        with:
          repository: facebook/zstd
          submodules: recursive

      # Disabled because 1.5.6 has an issue with MSVC which has not yet been fixed in a newer Tag, see https://github.com/facebook/zstd/pull/4019
      #- name: Checkout latest Tag
      #  shell: bash
      #  run: git fetch --tags && git checkout "$(git describe --tags "$(git rev-list --tags --max-count=1)")"
      
      - name: Build Zstd
        shell: bash
        run: |
          cd build/cmake
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            for arch in x64 ARM64; do # We dont want Win32
              mkdir -p ../../output/$arch
              mkdir build-$arch
              cd build-$arch
              cmake -DZSTD_MULTITHREAD_SUPPORT=ON -DZSTD_LEGACY_SUPPORT=OFF -DZSTD_BUILD_PROGRAMS=OFF -DZSTD_BUILD_STATIC=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -A $arch ..
              cmake --build . -j 4 --config Release
              cp lib/Release/zstd.dll ../../../output/$arch/libzstd.dll
              cd ..
            done
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            for arch in x64 ARM64; do
              mkdir -p ../../output/$arch
              mkdir build-$arch
              cd build-$arch
              if [[ "$arch" == "ARM64" ]]; then
                cmake -DZSTD_MULTITHREAD_SUPPORT=ON -DZSTD_LEGACY_SUPPORT=OFF -DZSTD_BUILD_PROGRAMS=OFF -DZSTD_BUILD_STATIC=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_BUILD_TYPE=Release ..
              elif
                cmake -DZSTD_MULTITHREAD_SUPPORT=ON -DZSTD_LEGACY_SUPPORT=OFF -DZSTD_BUILD_PROGRAMS=OFF ..
              fi
              cmake --build . -j 4
              cp lib/libzstd.so ../../../output/$arch/libzstd.so
              cd ..
            done
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mkdir build ../../output
            cd build
            cmake -DZSTD_MULTITHREAD_SUPPORT=ON -DZSTD_LEGACY_SUPPORT=OFF -DZSTD_BUILD_PROGRAMS=OFF -DZSTD_BUILD_STATIC=OFF -DBUILD_SHARED_LIBS=ON "-DCMAKE_OSX_ARCHITECTURES=arm64;arm64e;x86_64;x86_64h" -DCMAKE_BUILD_TYPE=Release  ..
            cmake --build . -j 4 --config Release
            ls -R
            cp lib/libzstd.dylib ../../../output/libzstd.dylib
            cd ..
          fi

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: zstd-${{ matrix.os }}
          path: output
          compression-level: 9 # Prefer smaller downloads over a shorter workflow runtime
